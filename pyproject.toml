[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "Bundesliga-Scraper"
version = "0.0.1"
requires-python = ">=3.11"
authors = [
    {name = "Aaron Bittel", email = "aaron@bittels.de"},
]
dependencies = [
    "argparse",
    "requests",
    "rich",
    "plotext",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy"
]

[project.scripts]
get = "bundesliga_scraper.__main__:main"

# target-version = "py310"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "PL", "ANN"]
ignore = ["ANN101", "ANN102"]

# ignore = ["D203", "D213", "D406", "D407", "D413", "ANN101", "COM812", "ISC001", "T201"]

# Allow fix for all enabled rules (when `--fix`) is provided.
# fixable = ["ALL"]
# unfixable = []

# Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
